#!/usr/bin/env ruby

require 'rubygems'
require 'luck'

require File.join(File.dirname(__FILE__), 'irc')

display = Luck::Display.new nil

connection = nil
Thread.new {
  EM.run {
    connection = IRC.connect 'irc.eighthbit.net', 6667, 'luckirc', '#programming'
#~ def initialize(nick, channels=nil, admins=[], ident=nil, realname=nil, password=nil)
  }
}

trap 'INT' do
  display.undo_modes
  exit
end

begin
  display.pane :left, 1, 1, 20, -1, 'Channels' do
    control :chans, Luck::ListBox, 1, 1, -1, -1 do
      number!
    end
  end

  display.pane :main, 20, 1, -20, -1, 'Topic goes here' do
    control :history, Luck::ListBox, 2, 1, -2, -2
    display.active_control = control :input, Luck::TextBox, 2, -1, -2, -1 do
      #self.label = 'danopia'
      self.text = ''
    end
  end

  display.pane :right, -20, 1, -1, -1, 'Nicks' do
    control :nicks, Luck::ListBox, 1, 1, -1, -1
  end
  
  display.panes[:main].controls[:input].on_submit do |message|
    connection.message '#programming', message
    display.panes[:main].controls[:history].data << "<luckirc> #{message}"
    display.dirty! :main
  end
  
  IRC.on :message do |e|
    return unless e.params.any?

    #puts "<-- MSG [#{e.origin[:nick]}/#{e.reply_to}] #{e.param}"
    display.panes[:main].controls[:history].data << "<#{e.origin[:nick]}> #{e.param}"
    display.dirty! :main
  end

  display.handle while sleep 0.01

rescue => ex
  display.undo_modes
  puts ex.class, ex.message, ex.backtrace
  exit
end
